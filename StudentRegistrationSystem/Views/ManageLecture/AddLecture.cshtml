@model StudentRegistrationSystem.ViewModels.AdminLecture.AddLectureViewModel


@{
    ViewBag.Title = "AddLecture";
    Layout = "~/Views/Shared/_adminLayout.cshtml";
}

<div class="container">
    <h3 class="text-muted text-center mb-3">Ders Ekleme</h3>
</div>


<div class="container contact w-75 ">

    <div class="row bg-light">

        <div class="col-md-3">
            <div class="contact-info mt-4 ml-3">
                <i class="fas fa-plus fa-3x" style="color: green;"></i>


            </div>
        </div>

        <div class="col mt-4">

            <!-- FORM BŞALANGIC-->

            @using (Html.BeginForm("AddLecture", "ManageLecture", new { Model.DepartmentCode }))
            {
                <div class="contact-form">
                    @Html.AntiForgeryToken()

                    <div class="form-group">
                        <label class="control-label " for="fname">Ders Kodu:</label>
                        <div class="col-sm-8">
                            @Html.TextBoxFor(m => m.LectureCode, new { @class = "form-control", placeholder = "Ders Kodu", pattern = "[0-9]+", title = "Ders kodu sadece rakam içerebilir", required = "required" })

                        </div>
                    </div>

                    <div class="form-group">
                        <label class="control-label " for="fname">Ders Adı:</label>
                        <div class="col-sm-8">

                            @Html.TextBoxFor(m => m.Name, new { @class = "form-control", placeholder = "Ders Adı", required = "required" })

                        </div>
                    </div>


                    <div class="form-group">
                        <label for="exampleFormControlSelect1">Öğretim Türü</label>
                        <div class="col-sm-8">

                            @{
                                List<SelectListItem> items = new List<SelectListItem>();

                                items.Add(new SelectListItem { Text = "Birinci Öğretim", Value = "Birinci Öğretim", Selected = true });

                                items.Add(new SelectListItem { Text = "İkinci Öğretim", Value = "İkinci Öğretim" });
                            }
                            @Html.DropDownListFor(m => m.EducationType, items, new { @class = "form-control" })

                        </div>

                    </div>



                    <div class="form-group">
                        <label for="exampleFormControlSelect1">Bölüm</label>
                        <div class="col-sm-8">

                            @{
                                List<SelectListItem> departments = new List<SelectListItem>();

                                departments.Add(new SelectListItem { Text = Model.department.Name, Value = Model.department.DepartmentCode, Selected = true });

                            }

                            @Html.DropDownListFor(m => m.DepartmentCode, departments, new { @class = "form-control", required = "required" })

                        </div>

                    </div>

                    <div class="form-group">
                        <label class="control-label " for="fname">Kredi</label>
                        <div class="col-sm-8">
                            @Html.TextBoxFor(m => m.Credit, new { @class = "form-control", placeholder = "Ders Kredisi", pattern = "[0-9]+", title = "Lütfen sadece sayı giriniz", required = "required" })

                        </div>
                    </div>


                    <div class="form-group">
                        <label for="exampleFormControlSelect1">Dönem</label>
                        <div class="col-sm-8">

                            @{
                                List<SelectListItem> terms = new List<SelectListItem>();

                                terms.Add(new SelectListItem { Text = "Güz", Value = "Güz", Selected = true });

                                terms.Add(new SelectListItem { Text = "Bahar", Value = "Bahar" });


                            }
                            @Html.DropDownListFor(m => m.Term, terms, new { @class = "form-control" })

                        </div>

                    </div>


                    <div class="form-group ">
                        <div class="col-sm-offset-2 col-sm-10">
                            <button type="submit" class="btn btn-success  ">Ders Ekle</button>
                        </div>
                    </div>
                </div>


                <!-- FORM bitiş-->
            }

            @if (@TempData["AddLectureStatus"] != null && @TempData["AddLectureStatus"].Equals("LectureExists"))
            {
                <div class="alert alert-danger alert-dismissible fade show" role="alert">
                    <h5 class="alert-heading"><b>Başarısız!</b></h5>
                    <p>Aynı ders kodu ve öğretim tipine sahip başka bir der bulunuyor.</p>
                    <p>Lütfen önce o dersi silin ya da öğretim tipini değiştirin.</p>
                    <button type="button" class="close" data-dismiss="alert" aria-label="Close">
                        <span aria-hidden="true">&times;</span>
                    </button>
                </div>
            }

           



        </div>
    </div>
</div>

