@model StudentRegistrationSystem.ViewModels.UpdateStudentViewModel
@using StudentRegistrationSystem.Models.Entity
@{
    ViewBag.Title = "Update";
    Layout = "~/Views/Shared/_adminLayout.cshtml";
}
@if (@TempData["PasswordSuccess"] == null)
{

}
else
{
    <div class="container rounded mt-1 alert alert-success alert-dismissible fade show" role="alert">
        <h5 class="alert-heading"><b>Başarılı!</b></h5>
        <p>Öğrencinin parolası resetlendi.</p>
        <button type="button" class="close" data-dismiss="alert" aria-label="Close">
            <span aria-hidden="true">&times;</span>
        </button>
    </div>
}
<div class="container rounded bg-white mt-3 ">
    <div class="row">
        @{Model.userID = Model.user.UserID;}
        <div class="col-md-3 border-right">
            <div class="d-flex flex-column align-items-center text-center p-3 py-5">
                <img src="https://media.istockphoto.com/vectors/student-icon-isolated-vector-id578555190?k=6&m=578555190&s=170667a&w=0&h=JzLVMnG_ioZRjXQ5zFuQsAL2UzBSA7tfQ2HYTkz4jrA="
                     alt="Admin" class="rounded-circle" style="width: 80%;">
                <span class="font-weight-bold">@Model.user.Name @Model.user.LastName</span>
                <span class="text-black-50">Öğrenci</span>
                <br />
                <span><a href="@Url.Action("Courses","ManageStudent",new{ UserID = Model.userID})" class="btn btn-block btn-info">Alınan Dersler</a></span>
            </div>
        </div>
        <div class="col-md-5 border-right">


            @using (Html.BeginForm())
            {
                @Html.AntiForgeryToken()

                <div class="p-3 py-5">
                    <div class="d-flex justify-content-between align-items-center mb-3">
                        <h4 class="text-right">Öğrenci Bilgileri</h4>
                    </div>
                    <div class="row mt-2">
                        <div class="col-md-6">
                            <label class="labels">İsim:</label>@*<input type="text" class="form-control"placeholder="İsim" value="@Model.Name">*@
                            @Html.TextBoxFor(n => n.Name, new { @class = "form-control", placeholder = "İsim", required = "required", @Value = Model.user.Name })
                        </div>
                        <div class="col-md-6">
                            <label class="labels">Soyisim:</label>
                            @Html.TextBoxFor(n => n.LastName, new { @class = "form-control", placeholder = "Soyisim", required = "required", @Value = Model.user.LastName })
                        </div>
                    </div>
                    <div class="row mt-3">
                        <div class="col-md-12">
                            <label class="labels">Cinsiyet:</label>
                            @{
                                List<SelectListItem> items = new List<SelectListItem>();
                                if (Model.user.Gender.Equals("Erkek"))
                                {
                                    items.Add(new SelectListItem { Text = "Kadın", Value = "Kadın" });

                                    items.Add(new SelectListItem { Text = "Erkek", Value = "Erkek", Selected = true });
                                }
                                else
                                {
                                    items.Add(new SelectListItem { Text = "Kadın", Value = "Kadın", Selected = true });

                                    items.Add(new SelectListItem { Text = "Erkek", Value = "Erkek" });
                                }
                            }
                            @Html.DropDownListFor(n => n.Gender, items, new { @class = "form-control" })
                        </div>


                        <div class="col-md-12">
                            <label class="labels">Öğretim Tipi:</label>
                            @{
                                List<SelectListItem> educations = new List<SelectListItem>();}
                            @if (Model.user.EducationType[0].Equals('B'))
                            {
                                educations.Add(new SelectListItem { Text = "Birinci Öğretim", Value = "Birinci Öğretim", Selected = true });

                                educations.Add(new SelectListItem { Text = "İkinci Öğretim", Value = "İkinci Öğretim" });
                            }
                            else
                            {
                                educations.Add(new SelectListItem { Text = "İkinci Öğretim", Value = "İkinci Öğretim", Selected = true });

                                educations.Add(new SelectListItem { Text = "Birinci Öğretim", Value = "Birinci Öğretim" });


                            }

                            @Html.DropDownListFor(n => n.EducationType, educations, new { @class = "form-control" })
                        </div>

                        <div class="col-md-12">
                            <label class="labels">Telefon:</label>
                            @Html.TextBoxFor(n => n.Phone, new { @class = "form-control", placeholder = "Telefon Numarası", required = "required", pattern = "[0-9]+", @Value = Model.user.Phone })

                        </div>
                        <div class="col-md-12">
                            <label class="labels">Danışman:</label>
                            @{ List<SelectListItem> advisors = new List<SelectListItem>();}
                            @if(Model.user.LecturerID == null)
                            {
                                advisors.Add(new SelectListItem { Text= "Öğrencinin Danışmanı Yok", Value = null, Selected = true});
                            }
                            @foreach (Lecturer l in Model.departmentLecturers)
                            {
                                
                                    if (Model.user.LecturerID == l.LecturerID)
                                    {
                                        advisors.Add(new SelectListItem { Text = l.Name + " " + l.LastName, Value = l.LecturerID.ToString(), Selected = true });
                                    }
                                    else
                                    {
                                        advisors.Add(new SelectListItem { Text = l.Name + " " + l.LastName, Value = l.LecturerID.ToString() });
                                    }
                                
                            }
                            @Html.DropDownListFor(n => n.LecturerID, advisors, new { @class = "form-control" })
                        </div>
                    </div>

                    <div class="mt-5 text-center">

                        <input type="submit" value="Kaydet" class="btn  btn-block btn-success rounded-0 py-2">

                    </div>


                </div>
            }
        </div>
        <div class="col-md-4">
            <div class="p-3 py-5">
                <div class="row justify-content-center">


                    <div class="card  rounded-0">
                        <div class="card-header p-0 bg-dark ">
                            <div class=" text-white text-center py-2">
                                <h3><i class="fas fa-pen-square"></i> Güvenlik</h3>
                                <h8>Öğrenci Parolası Değiştir </h8>
                            </div>
                        </div>

                        @using (Html.BeginForm("UpdatePassword", "ManageStudent", new { UserID = Model.user.UserID }, FormMethod.Post))
                        {


                            <div class="card-body p-3">

                                <!--Body-->


                                <div class="form-group">
                                    <h6 class="text-center">Yeni Parola</h6>
                                    <div class="input-group mb-2">
                                        <div class="input-group-prepend">
                                            <div class="input-group-text"><i class="fa fa-info-circle "></i></div>
                                        </div>
                                        @Html.PasswordFor(n => n.Password, new { @class = "form-control", placeholder = "Yeni Parola", required = "required", @id = "password" })
                                    </div>
                                </div>

                                <div class="form-group">
                                    <h6 class="text-center">Yeni Parola Doğrula</h6>
                                    <div class="input-group mb-2">

                                        <div class="input-group-prepend">
                                            <div class="input-group-text"><i class="fa fa-info-circle "></i></div>
                                        </div>

                                        <input type="password" class="form-control" id="confirm_password"
                                               placeholder="Yeni Parola Doğrula" required>
                                    </div>
                                </div>
                                <br />
                                <div class="text-center">
                                    <input type="submit" value="Kaydet" class="btn  btn-block btn-success rounded-0 py-2">
                                </div>
                            </div>



                        }

                    </div>
                    @*<a href="@Url.Action("Courses","ManageStudent",new{ UserID = Model.userID})" class="btn btn-block btn-info">Alınan Dersler</a>*@
                    @*<input type="submit" value="Kaydet" class="btn  btn-block btn-success rounded-0 py-2">*@



                </div>
            </div>
        </div>
    </div>
</div>

@section Javascript {


    <script src="~/Content/jquery/ajaxuncompressed.js"></script>
    <script>
        var password = document.getElementById("password")
            , confirm_password = document.getElementById("confirm_password");

        function validatePassword() {
            if (password.value != confirm_password.value) {
                confirm_password.setCustomValidity("Parolalar eşlemiyor");
            } else {
                confirm_password.setCustomValidity('');
            }
        }

        password.onchange = validatePassword;
        confirm_password.onkeyup = validatePassword;


    </script>

}